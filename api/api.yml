swagger: '2.0'
info:
  title: Annotations Publisher
  description: Publishes annotations to UPP from PAC
  version: 0.0.1
  license:
    name: MIT
  contact:
    name: Universal Publishing
    email: universal.publishing@ft.com
host: api.ft.com
basePath: /
schemes:
  - http
  - https
paths:
  '/drafts/content/{uuid}/annotations/publish':
    post:
      summary: Publish Annotations for Content
      description: 'Accepts annotations in an array, and publishes them to UPP'
      tags:
        - Public API
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          description: An RFC4122 V4 UUID for a piece of content
          type: string
          x-example: 0620cfe1-e7ee-44d6-918e-e5ca278d2245
        - name: annotations
          in: body
          required: false
          description: >-
            An array of PAC style annotations to publish to UPP. Is required if not publishing from store (see fromStore parameter)
          schema:
            type: object
            properties:
              annotations:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      x-example: >-
                        http://www.ft.com/thing/5bd49568-6d7c-3c10-a5b0-2f3fd5974a6b
                    predicate:
                      type: string
                      x-example: 'http://www.ft.com/ontology/hasContributor'
            example:
              annotations:
                - id: 'http://www.ft.com/thing/5bd49568-6d7c-3c10-a5b0-2f3fd5974a6b'
                  predicate: 'http://www.ft.com/ontology/hasContributor'
        - name: fromStore
          in: query
          required: false
          description: >-
            Indicates the source of annotations to publish is from store. Body
            should NOT be included with this parameter
          type: boolean
      responses:
        '202':
          description: >-
            The annotations have been accepted for publishing by UPP. N.B. this
            does not guarantee that the annotations will publish successfully.
          examples:
            application/json:
              message: Publish accepted
        '400':
          description: >-
            The UUID specified in the path is invalid, or the request body is
            not in a valid JSON format or missing body from publish with body or
            body is present with fromStore=true request parameter.
          examples:
            application/json:
              message: see reason here
        '503':
          description: >-
            A failure occurred while attempting to publish to UPP. Please check
            the `/__health` endpoint and try again.
          examples:
            application/json:
              message: Failed to publish to UPP
  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        '200':
          description: >
            Should always return 200 along with the output of the healthchecks -
            regardless of whether the healthchecks failed or not. Please inspect
            the overall ok property to see whether or not the application is
            healthy.
          examples:
            application/json:
              schemaVersion: 1
              systemCode: dewey-system-code
              name: app-name
              description: A descriptive description
              checks:
                - id: check-api-health
                  name: Check API Health
                  ok: false
                  severity: 1
                  businessImpact: A business impact this failure might have
                  technicalSummary: A technical description of what's gone wrong
                  panicGuide: 'https://dewey.ft.com/dewey-system-code.html'
                  checkOutput: Technical output from the check
                  lastUpdated: 2017-08-03T09:44:32.324Z
              ok: true
  /__build-info:
    get:
      summary: Build Information
      description: >
        Returns application build info, such as the git repository and revision,
        the golang version it was built with, and the app release version.
      produces:
        - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        '200':
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: 0.0.1
              repository: 'https://github.com/Financial-Times/app-name.git'
              revision: 7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd
              builder: go version go1.6.3 linux/amd64
              dateTime: '20161123122615'
  /__gtg:
    get:
      summary: Good To Go
      description: >-
        Lightly healthchecks the application, and returns a 200 if it's
        Good-To-Go.
      tags:
        - Health
      produces:
        - text/plain; charset=US-ASCII
      responses:
        '200':
          description: >-
            The application is healthy enough to perform all its functions
            correctly - i.e. good to go.
          examples:
            text/plain; charset=US-ASCII: OK
        '503':
          description: >
            One or more of the applications healthchecks have failed, so please
            do not use the app. See the /__health endpoint for more detailed
            information.
