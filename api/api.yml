swagger: '2.0'
info:
  title: Annotations Publisher
  description: Publishes annotations to UPP from PAC
  version: 0.0.1
  license:
    name: MIT
  contact:
    name: Universal Publishing
    email: universal.publishing@ft.com
host: api.ft.com
basePath: /
schemes:
  - http
  - https
paths:
  '/drafts/content/{uuid}/annotations/publish':
    post:
      summary: Publish Annotations for Content
      description: 'Accepts annotations in an array, and publishes them to UPP'
      tags:
        - Public API
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          description: An RFC4122 V4 UUID for a piece of content
          type: string
          x-example: 0620cfe1-e7ee-44d6-918e-e5ca278d2245
        - name: annotations
          in: body
          required: false
          description: >-
            An array of PAC style annotations to publish to UPP. Is required if not publishing from store (see fromStore parameter)
          schema:
            type: object
            properties:
              uuid:
                type: string
                x-example: 8b956373-1129-4e37-95b0-7bfc914ded70
              annotations:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      x-example: >-
                        http://www.ft.com/thing/5bd49568-6d7c-3c10-a5b0-2f3fd5974a6b
                    predicate:
                      type: string
                      x-example: 'http://www.ft.com/ontology/hasContributor'
            example:
              uuid: 8b956373-1129-4e37-95b0-7bfc914ded70
              annotations:
                - id: 'http://www.ft.com/thing/5bd49568-6d7c-3c10-a5b0-2f3fd5974a6b'
                  predicate: 'http://www.ft.com/ontology/hasContributor'
        - name: fromStore
          in: query
          required: false
          description: >-
            Indicates the source of annotations to publish is from store. Body
            should NOT be included with this parameter
          type: boolean
      responses:
        '202':
          description: >-
            The annotations have been accepted for publishing by UPP. N.B. this
            does not guarantee that the annotations will publish successfully.
          examples:
            application/json:
              message: Publish accepted
        '400':
          description: >-
            The UUID specified in the path is invalid, or the request body is
            not in a valid JSON format or missing body from publish with body or
            body is present with fromStore=true request parameter.
          examples:
            application/json:
              message: see reason here
        '503':
          description: >-
            A failure occurred while attempting to publish to UPP. Please check
            the `/__health` endpoint and try again.
          examples:
            application/json:
              message: Failed to publish to UPP
  /schemas:
    get:
      summary: List Schemas
      description: Returns the schemas used in the application.
      produces:
        - application/json
      responses:
        '200':
          description: >
            Returns the schemas used in the application.
          examples:
            application/json:
              _links:
                application/vnd.ft-upp-annotations-draft.json:
                  - href: "/schemas/annotations-draft.json"
                    name: "latest-version"
                application/vnd.ft-upp-annotations-pac.json:
                  - href: "/schemas/annotations-pac.json"
                    name: "latest-version"
                application/vnd.ft-upp-annotations-sv.json:
                  - href: "/schemas/annotations-sv.json"
                    name: "latest-version"
                self:
                  href: "/schemas"

  /schemas/{schemaName}:
    get:
      summary: Schema
      description: Returns the specified schema used in the application.
      produces:
        - application/json
      parameters:
        - name: schemaName
          in: path
          description: Name of the schema to return
          required: true
          type: string
      responses:
        404:
          description: >
            The specified schema does not exist in the application.
        '200':
          description: >
            Returns the specified schema used in the application.
          examples:
            application/json:
              $schema: "https://json-schema.org/draft/2020-12/schema"
              $id: "http://upp-publishing-prod.ft.com/schema/annotations-draft+json"
              title: "Draft Annotations"
              type: "object"
              description: "Schema for Draft Annotations"
              properties:
                uuid:
                  type: "string"
                  pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
                  description: "Proprietary unique FT identifier"
                annotations:
                  type: "array"
                  description: "Draft annotations"
                  items:
                    ref: "#/$defs/annotation"
                publication:
                  type: "array"
                  description: "List of Publication IDs"
                  items:
                    type: "string"
                    format: "uuid"
                lastModified:
                  type: "string"
                  format: "date-time"
                  description: "An internal timestamp tracking every single modification of the content"
                publishReference:
                  type: "string"
                  description: "The transaction id of the write operation in UPP. Internal property."
              required:
                - "uuid"
                - "annotations"
                - "publication"
              additionalProperties: false
              $defs:
                annotation:
                  type: "object"
                  properties:
                    id:
                      type: "string"
                      pattern: ".*/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$"
                      description: "ID of the related concept"
                    predicate:
                      type: "string"
                      description: "Predicate of the annotation"
                      enum:
                        - "http://www.ft.com/ontology/annotation/about"
                        - "http://www.ft.com/ontology/annotation/hasAuthor"
                        - "http://www.ft.com/ontology/annotation/hasReference"
                    apiUrl:
                      type: "string"
                      description: "API URL of the related concept"
                    type:
                      type: "string"
                      description: "Type of the related concept"
                    prefLabel:
                      type: "string"
                      description: "PrefLabel of the related concept"
                    isFTAuthor:
                      type: "boolean"
                      description: "Indicates whether the related concept is an FT author"
                  required:
                    - "id"
                    - "predicate"
                  additionalProperties: false
  /validate:
    post:
      summary: Validate
      description: Validates the provided annotations.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Annotations to validate
          required: true
          schema:
            type: object
            properties:
              annotations:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    predicate:
                      type: string
              uuid:
                type: string
              publication:
                type: array
                items:
                  type: string
      responses:
        '400':
            description: >
                The request body is not in a valid schema format or missing required
                fields.
            examples:
                application/json:
                    message: see reason here
        '200':
          description: >
            Validation successful.
  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        '200':
          description: >
            Should always return 200 along with the output of the healthchecks -
            regardless of whether the healthchecks failed or not. Please inspect
            the overall ok property to see whether or not the application is
            healthy.
          examples:
            application/json:
              schemaVersion: 1
              systemCode: dewey-system-code
              name: app-name
              description: A descriptive description
              checks:
                - id: check-api-health
                  name: Check API Health
                  ok: false
                  severity: 1
                  businessImpact: A business impact this failure might have
                  technicalSummary: A technical description of what's gone wrong
                  panicGuide: 'https://dewey.ft.com/dewey-system-code.html'
                  checkOutput: Technical output from the check
                  lastUpdated: 2017-08-03T09:44:32.324Z
              ok: true
  /__build-info:
    get:
      summary: Build Information
      description: >
        Returns application build info, such as the git repository and revision,
        the golang version it was built with, and the app release version.
      produces:
        - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        '200':
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: 0.0.1
              repository: 'https://github.com/Financial-Times/app-name.git'
              revision: 7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd
              builder: go version go1.6.3 linux/amd64
              dateTime: '20161123122615'
  /__gtg:
    get:
      summary: Good To Go
      description: >-
        Lightly healthchecks the application, and returns a 200 if it's
        Good-To-Go.
      tags:
        - Health
      produces:
        - text/plain; charset=US-ASCII
      responses:
        '200':
          description: >-
            The application is healthy enough to perform all its functions
            correctly - i.e. good to go.
          examples:
            text/plain; charset=US-ASCII: OK
        '503':
          description: >
            One or more of the applications healthchecks have failed, so please
            do not use the app. See the /__health endpoint for more detailed
            information.
